{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from 'use-wallet';\nimport { getEarned, getFarmContract } from '../farm/utils';\nimport useYam from './useYam';\nimport useBlock from './useBlock';\n\nconst useEarnings = pid => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const yam = useYam();\n  const farmContract = getFarmContract(yam);\n  const block = useBlock();\n  const fetchBalance = useCallback(async () => {\n    const balance = await getEarned(farmContract, pid, account);\n    setBalance(new BigNumber(balance));\n  }, [account, farmContract, yam]);\n  useEffect(() => {\n    if (account && farmContract && yam) {\n      fetchBalance();\n    }\n  }, [account, block, farmContract, setBalance, yam]);\n  return balance;\n};\n\nexport default useEarnings;","map":{"version":3,"sources":["/home/fibo/Documents/workspace/front-lp-stack/src/hooks/useEarnings.ts"],"names":["useCallback","useEffect","useState","BigNumber","useWallet","getEarned","getFarmContract","useYam","useBlock","useEarnings","pid","balance","setBalance","account","ethereum","yam","farmContract","block","fetchBalance"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,eAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,WAAW,GAAIC,GAAD,IAAiB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAAtC;AACA,QAAM;AACJU,IAAAA,OADI;AAEJC,IAAAA;AAFI,MAGuCV,SAAS,EAHtD;AAIA,QAAMW,GAAG,GAAGR,MAAM,EAAlB;AACA,QAAMS,YAAY,GAAGV,eAAe,CAACS,GAAD,CAApC;AACA,QAAME,KAAK,GAAGT,QAAQ,EAAtB;AAEA,QAAMU,YAAY,GAAGlB,WAAW,CAAC,YAAY;AAC3C,UAAMW,OAAO,GAAG,MAAMN,SAAS,CAACW,YAAD,EAAeN,GAAf,EAAoBG,OAApB,CAA/B;AACAD,IAAAA,UAAU,CAAC,IAAIT,SAAJ,CAAcQ,OAAd,CAAD,CAAV;AACD,GAH+B,EAG7B,CAACE,OAAD,EAAUG,YAAV,EAAwBD,GAAxB,CAH6B,CAAhC;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,IAAIG,YAAX,IAA2BD,GAA/B,EAAoC;AAClCG,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACL,OAAD,EAAUI,KAAV,EAAiBD,YAAjB,EAA+BJ,UAA/B,EAA2CG,GAA3C,CAJM,CAAT;AAMA,SAAOJ,OAAP;AACD,CAtBD;;AAwBA,eAAeF,WAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { provider } from 'web3-core'\n\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\n\nimport { getEarned, getFarmContract } from '../farm/utils'\nimport useYam from './useYam'\nimport useBlock from './useBlock'\n\nconst useEarnings = (pid: number) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const {\n    account,\n    ethereum,\n  }: { account: string; ethereum: provider } = useWallet()\n  const yam = useYam()\n  const farmContract = getFarmContract(yam)\n  const block = useBlock()\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await getEarned(farmContract, pid, account)\n    setBalance(new BigNumber(balance))\n  }, [account, farmContract, yam])\n\n  useEffect(() => {\n    if (account && farmContract && yam) {\n      fetchBalance()\n    }\n  }, [account, block, farmContract, setBalance, yam])\n\n  return balance\n}\n\nexport default useEarnings\n"]},"metadata":{},"sourceType":"module"}