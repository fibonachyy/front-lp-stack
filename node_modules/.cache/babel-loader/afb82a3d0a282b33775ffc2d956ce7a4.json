{"ast":null,"code":"var _jsxFileName = \"/home/fibo/Documents/workspace/front-lp-stack/src/components/TokenInput/TokenInput.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../Button';\nimport Input from '../Input';\n\nconst TokenInput = _ref => {\n  let {\n    max,\n    symbol,\n    onChange,\n    onSelectMax,\n    value\n  } = _ref;\n  return /*#__PURE__*/React.createElement(StyledTokenInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledMaxText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, max.toLocaleString(), \" \", symbol, \" Available\"), /*#__PURE__*/React.createElement(Input, {\n    endAdornment: /*#__PURE__*/React.createElement(StyledTokenAdornmentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StyledTokenSymbol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, symbol), /*#__PURE__*/React.createElement(StyledSpacer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: 'secondary',\n      text: \"Max\",\n      onClick: onSelectMax,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }))),\n    onChange: onChange,\n    placeholder: \"0\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\n\nconst StyledTokenInput = styled.div``;\nconst StyledSpacer = styled.div`\n    width: ${props => props.theme.spacing[3]}px;\n`;\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${props => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n`;\nconst StyledTokenSymbol = styled.span`\n  color: ${props => props.theme.color.grey[600]};\n  font-weight: 700;\n`;\nexport default TokenInput;","map":{"version":3,"sources":["/home/fibo/Documents/workspace/front-lp-stack/src/components/TokenInput/TokenInput.tsx"],"names":["React","styled","Button","Input","TokenInput","max","symbol","onChange","onSelectMax","value","toLocaleString","StyledTokenInput","div","StyledSpacer","props","theme","spacing","StyledTokenAdornmentWrapper","StyledMaxText","color","grey","StyledTokenSymbol","span"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkC,UAAlC;;AAQA,MAAMC,UAAqC,GAAG,QAMxC;AAAA,MANyC;AAC7CC,IAAAA,GAD6C;AAE7CC,IAAAA,MAF6C;AAG7CC,IAAAA,QAH6C;AAI7CC,IAAAA,WAJ6C;AAK7CC,IAAAA;AAL6C,GAMzC;AACJ,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBJ,GAAG,CAACK,cAAJ,EAAhB,OAAuCJ,MAAvC,eADF,eAEE,oBAAC,KAAD;AACE,IAAA,YAAY,eACV,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,MAApB,CADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAE,WAA3B;AAAwC,MAAA,IAAI,EAAC,KAA7C;AAAmD,MAAA,OAAO,EAAEE,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CAFJ;AAUE,IAAA,QAAQ,EAAED,QAVZ;AAWE,IAAA,WAAW,EAAC,GAXd;AAYE,IAAA,KAAK,EAAEE,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAmBD,CA1BD;AA4BA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,gBAAgB,GAAGV,MAAM,CAACW,GAAI,EAApC;AAEA,MAAMC,YAAY,GAAGZ,MAAM,CAACW,GAAI;AAChC,aAAaE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAC7C,CAFA;AAIA,MAAMC,2BAA2B,GAAGhB,MAAM,CAACW,GAAI;AAC/C;AACA;AACA,CAHA;AAKA,MAAMM,aAAa,GAAGjB,MAAM,CAACW,GAAI;AACjC;AACA,WAAWE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AAChD;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,iBAAiB,GAAGpB,MAAM,CAACqB,IAAK;AACtC,WAAWR,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AAChD;AACA,CAHA;AAKA,eAAehB,UAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from '../Button'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string,\n  symbol: string,\n  onSelectMax?: () => void,\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>{max.toLocaleString()} {symbol} Available</StyledMaxText>\n      <Input\n        endAdornment={(\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" variant={'secondary'} text=\"Max\" onClick={onSelectMax} />\n            </div>\n          </StyledTokenAdornmentWrapper>\n        )}\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n    width: ${props => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${props => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${props => props.theme.color.grey[600]};\n  font-weight: 700;\n`\n\nexport default TokenInput\n"]},"metadata":{},"sourceType":"module"}